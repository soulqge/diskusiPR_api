// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace diskusiPR.Models;

public partial class diskusiPrContext : DbContext
{
    public diskusiPrContext(DbContextOptions<diskusiPrContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Jawaban> Jawabans { get; set; }

    public virtual DbSet<JenjangPendidikan> JenjangPendidikans { get; set; }

    public virtual DbSet<MataPelajaran> MataPelajarans { get; set; }

    public virtual DbSet<Soal> Soals { get; set; }

    public virtual DbSet<SoalJawaban> SoalJawabans { get; set; }

    public virtual DbSet<SubMataPelajaran> SubMataPelajarans { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Jawaban>(entity =>
        {
            entity.HasKey(e => e.IdJawaban);

            entity.ToTable("jawaban");

            entity.Property(e => e.IdJawaban).HasColumnName("id_jawaban");
            entity.Property(e => e.Author).HasColumnName("author");
            entity.Property(e => e.Jawaban1)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("jawaban");

            entity.HasOne(d => d.AuthorNavigation).WithMany(p => p.Jawabans)
                .HasForeignKey(d => d.Author)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_jawaban_user");
        });

        modelBuilder.Entity<JenjangPendidikan>(entity =>
        {
            entity.HasKey(e => e.IdJenjangPendidikan);

            entity.ToTable("jenjang_pendidikan");

            entity.Property(e => e.IdJenjangPendidikan).HasColumnName("id_jenjang_pendidikan");
            entity.Property(e => e.NamaJenjang)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nama_jenjang");
        });

        modelBuilder.Entity<MataPelajaran>(entity =>
        {
            entity.HasKey(e => e.IdMataPelajaran);

            entity.ToTable("mata_pelajaran");

            entity.Property(e => e.IdMataPelajaran).HasColumnName("id_mata_pelajaran");
            entity.Property(e => e.IdSubMapel).HasColumnName("id_sub_mapel");
            entity.Property(e => e.NamaMapel)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nama_mapel");

            entity.HasOne(d => d.IdSubMapelNavigation).WithMany(p => p.MataPelajarans)
                .HasForeignKey(d => d.IdSubMapel)
                .HasConstraintName("FK_mata_pelajaran_sub_mata_pelajaran");
        });

        modelBuilder.Entity<Soal>(entity =>
        {
            entity.HasKey(e => e.IdSoal);

            entity.ToTable("soal");

            entity.Property(e => e.IdSoal).HasColumnName("id_soal");
            entity.Property(e => e.Author).HasColumnName("author");
            entity.Property(e => e.Foto)
                .HasColumnType("text")
                .HasColumnName("foto");
            entity.Property(e => e.IdJenjangPendidikan).HasColumnName("id_jenjang_pendidikan");
            entity.Property(e => e.IdMataPelajaran).HasColumnName("id_mata_pelajaran");
            entity.Property(e => e.Soal1)
                .IsRequired()
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("soal");

            entity.HasOne(d => d.AuthorNavigation).WithMany(p => p.Soals)
                .HasForeignKey(d => d.Author)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_soal_user");

            entity.HasOne(d => d.IdJenjangPendidikanNavigation).WithMany(p => p.Soals)
                .HasForeignKey(d => d.IdJenjangPendidikan)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_soal_jenjang_pendidikan");

            entity.HasOne(d => d.IdMataPelajaranNavigation).WithMany(p => p.Soals)
                .HasForeignKey(d => d.IdMataPelajaran)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_soal_mata_pelajaran");
        });

        modelBuilder.Entity<SoalJawaban>(entity =>
        {
            entity.HasKey(e => e.IdSoalJawaban);

            entity.ToTable("soal_jawaban");

            entity.Property(e => e.IdSoalJawaban).HasColumnName("id_soal_jawaban");
            entity.Property(e => e.IdJawaban).HasColumnName("id_jawaban");
            entity.Property(e => e.IdSoal).HasColumnName("id_soal");

            entity.HasOne(d => d.IdJawabanNavigation).WithMany(p => p.SoalJawabans)
                .HasForeignKey(d => d.IdJawaban)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_soal_jawaban_jawaban");

            entity.HasOne(d => d.IdSoalNavigation).WithMany(p => p.SoalJawabans)
                .HasForeignKey(d => d.IdSoal)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_soal_jawaban_soal");
        });

        modelBuilder.Entity<SubMataPelajaran>(entity =>
        {
            entity.HasKey(e => e.IdSubMapel);

            entity.ToTable("sub_mata_pelajaran");

            entity.Property(e => e.IdSubMapel).HasColumnName("id_sub_mapel");
            entity.Property(e => e.NamaSubMapel)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nama_sub_mapel");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.ToTable("user");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("email");
            entity.Property(e => e.Nama)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("nama");
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("password");
            entity.Property(e => e.Username)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("username");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}